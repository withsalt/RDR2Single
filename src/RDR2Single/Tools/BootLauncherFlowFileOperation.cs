using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace RDR2Single
{
    class BootLauncherFlowFileOperation
    {
        public static string GetBootLauncherFlowPath(string input)
        {
            if (!Common.CheckIsGamePath(input))
            {
                return null;
            }
            string path = Path.Combine(input, Common.DataPath);

            DirectoryInfo directoryInfo = Directory.GetParent(path);
            if (directoryInfo == null)
            {
                return null;
            }
            if (string.IsNullOrEmpty(directoryInfo.Parent.FullName))
            {
                return null;
            }
            path = Path.Combine(directoryInfo.Parent.FullName, "boot_launcher_flow.ymt");
            FileInfo fileInfo = new FileInfo(path);
            return fileInfo.FullName;
        }

        public static bool WriteBootLauncherFlow(string input)
        {
            string filePath = GetBootLauncherFlowPath(input);
            if (string.IsNullOrEmpty(filePath))
            {
                return false;
            }
            if (File.Exists(filePath))
            {
                return true;
            }
            return InitializeBootLauncherFlowFile(input);
        }

        public static bool DeleteBootLauncherFlow(string input)
        {
            string filePath = GetBootLauncherFlowPath(input);
            if (string.IsNullOrEmpty(filePath))
            {
                return false;
            }
            if (!File.Exists(filePath))
            {
                return true;
            }
            File.Delete(filePath);
            return true;
        }

        public static bool InitializeBootLauncherFlowFile(string input)
        {
            try
            {
                string filePath = GetBootLauncherFlowPath(input);
                if (string.IsNullOrEmpty(filePath))
                {
                    return false;
                }
                string fileContent = @"";
                byte[] decodeByte = Convert.FromBase64String(fileContent);
                File.WriteAllBytes(filePath, decodeByte);
                return true;
            }
            catch
            {
                return false;
            }
        }
    }
}
